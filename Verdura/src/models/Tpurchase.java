package models;

// Generated 03/09/2014 09:02:10 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

/**
 * Tpurchase generated by hbm2java
 */
@Entity
@Table(name = "tpurchase", schema = "public")
public class Tpurchase implements java.io.Serializable {

	private static final long serialVersionUID = 5557461848273299970L;
	private int idPurchase;
	private TorderNumber torderNumber;
	private TbusinessPartnerBranch tbusinessPartnerBranch;
	private int purchaseNumber;
	private String rif;
	private String bpName;
	private String bpBranchAddress;
	private Date purchaseDate;
	private Date deliveryDate;
	private char status;
	private Set<TpurchaseDetail> tpurchaseDetails = new HashSet<TpurchaseDetail>(0);

	public Tpurchase() {
	}

	public Tpurchase(int idPurchase, TorderNumber torderNumber, TbusinessPartnerBranch tbusinessPartnerBranch, int purchaseNumber, String rif, String bpName, String bpBranchAddress, Date purchaseDate, Date deliveryDate, char status) {
		this.idPurchase = idPurchase;
		this.torderNumber = torderNumber;
		this.tbusinessPartnerBranch = tbusinessPartnerBranch;
		this.purchaseNumber = purchaseNumber;
		this.rif = rif;
		this.bpName = bpName;
		this.bpBranchAddress = bpBranchAddress;
		this.purchaseDate = purchaseDate;
		this.deliveryDate = deliveryDate;
		this.status = status;
	}

	public Tpurchase(int idPurchase, TorderNumber torderNumber, TbusinessPartnerBranch tbusinessPartnerBranch, int purchaseNumber, String rif, String bpName, String bpBranchAddress, Date purchaseDate, Date deliveryDate, char status, Set<TpurchaseDetail> tpurchaseDetails) {
		this.idPurchase = idPurchase;
		this.torderNumber = torderNumber;
		this.tbusinessPartnerBranch = tbusinessPartnerBranch;
		this.purchaseNumber = purchaseNumber;
		this.rif = rif;
		this.bpName = bpName;
		this.bpBranchAddress = bpBranchAddress;
		this.purchaseDate = purchaseDate;
		this.deliveryDate = deliveryDate;
		this.status = status;
		this.tpurchaseDetails = tpurchaseDetails;
	}

	@Id
	@Column(name = "id_purchase", unique = true, nullable = false)
	public int getIdPurchase() {
		return this.idPurchase;
	}

	public void setIdPurchase(int idPurchase) {
		this.idPurchase = idPurchase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_order_number", nullable = false)
	public TorderNumber getTorderNumber() {
		return this.torderNumber;
	}

	public void setTorderNumber(TorderNumber torderNumber) {
		this.torderNumber = torderNumber;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_bp_branch", nullable = false)
	public TbusinessPartnerBranch getTbusinessPartnerBranch() {
		return this.tbusinessPartnerBranch;
	}

	public void setTbusinessPartnerBranch(TbusinessPartnerBranch tbusinessPartnerBranch) {
		this.tbusinessPartnerBranch = tbusinessPartnerBranch;
	}

	/**
	* <b>@Generated</B> con generationTime.ALWAYS es la forma de autoincrementar el campo cuando el campo no es
	* primario, y la base de datos le ha asignado una secuencia incrementable.
	*
	* @return
	*/
	@Generated(GenerationTime.ALWAYS)
	@Column(name = "purchase_number", nullable = false)
	public int getPurchaseNumber() {
		return this.purchaseNumber;
	}

	public void setPurchaseNumber(int purchaseNumber) {
		this.purchaseNumber = purchaseNumber;
	}

	@Column(name = "rif", nullable = false, length = 15)
	public String getRif() {
		return this.rif;
	}

	public void setRif(String rif) {
		this.rif = rif;
	}

	@Column(name = "bp_name", nullable = false, length = 100)
	public String getBpName() {
		return this.bpName;
	}

	public void setBpName(String bpName) {
		this.bpName = bpName;
	}

	@Column(name = "bp_branch_address", nullable = false, length = 200)
	public String getBpBranchAddress() {
		return this.bpBranchAddress;
	}

	public void setBpBranchAddress(String bpBranchAddress) {
		this.bpBranchAddress = bpBranchAddress;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "purchase_date", nullable = false, length = 29)
	public Date getPurchaseDate() {
		return this.purchaseDate;
	}

	public void setPurchaseDate(Date purchaseDate) {
		this.purchaseDate = purchaseDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "delivery_date", nullable = false, length = 29)
	public Date getDeliveryDate() {
		return this.deliveryDate;
	}

	public void setDeliveryDate(Date deliveryDate) {
		this.deliveryDate = deliveryDate;
	}

	@Column(name = "status", nullable = false, length = 1)
	public char getStatus() {
		return this.status;
	}

	public void setStatus(char status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tpurchase")
	public Set<TpurchaseDetail> getTpurchaseDetails() {
		return this.tpurchaseDetails;
	}

	public void setTpurchaseDetails(Set<TpurchaseDetail> tpurchaseDetails) {
		this.tpurchaseDetails = tpurchaseDetails;
	}

}
